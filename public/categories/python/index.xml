<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Andrea Dodet</title>
    <link>https://anddt.com/categories/python/</link>
    <description>Recent content in python on Andrea Dodet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>2021 Andrea dodet</copyright>
    <lastBuildDate>Sat, 10 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://anddt.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Playing around with streamlit dashboards</title>
      <link>https://anddt.com/post/streamlit-git-viz/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://anddt.com/post/streamlit-git-viz/</guid>
      <description>Playing around with streamlit dashboards  Intro Exploring a few tools Project structure Overview of dplyr activity Deploying + Streamlit Share + Google App Engine Closing remarks [Extra] Profiling slow methods References and notes  Intro A few weeks ago I have stumbled upon this post on hackernews containing a captivating piece of data visualization on the development history of git. I believe the visualization is particularly powerful for a few different reasons:</description>
    </item>
    
    <item>
      <title>Setting up a data-playground with docker-compose and Faker</title>
      <link>https://anddt.com/post/mock-environment/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://anddt.com/post/mock-environment/</guid>
      <description>Setting up a data-playground with docker-compose and Faker In the past few days I played around with Airflow to get familiar with its DAG syntax. Instead of scrambling around to find the right dataset to be imported in a MySQL instance I&amp;rsquo;ve decided to set-up a development environment from scratch that allowed me to quickly change the structure and type of data as I pleased. I&amp;rsquo;ve found this approach quite handy for three reasons:</description>
    </item>
    
  </channel>
</rss>
